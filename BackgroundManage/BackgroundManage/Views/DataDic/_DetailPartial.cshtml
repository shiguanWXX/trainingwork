@model BackgroundEFManage.ViewModels.DataDicDetailViewModel
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            <h4 class="modal-title" id="myDetailLabel">新增</h4>
        </div>
        <div class="modal-body" id="addUser">
            <div class="form-group">
                *@Html.LabelFor(model => model.DeChName)
                @Html.EditorFor(model => model.DeChName, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.DeChName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                *@Html.LabelFor(model => model.DeEnName)
                @Html.EditorFor(model => model.DeEnName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeEnName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                *@Html.LabelFor(model => model.Sort)
                @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Enable)
                @Html.DropDownListFor(model=>model.Enable,new List<SelectListItem> {
                    new SelectListItem() { Text = "是", Value="true"},
                    new SelectListItem() { Text = "否", Value="false"}
                },new{ htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
            </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.ModifyPerson)
                @Html.EditorFor(model => model.ModifyPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifyPerson, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ModifyTime)
                @Html.EditorFor(model => model.ModifyTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifyTime, "", new { @class = "text-danger" })
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            @Html.Hidden("DId")
            @Html.Hidden("Id")
        </div>

        <div class="modal-footer">
            <input type="reset" name="reset" style="display: none;" />
            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="this.form.reset(); "><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>关闭</button>
            <button type="button" id="btn_submit" class="btn btn-primary" onclick="SaveDataDetail()"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
        </div>

    </div>
</div>
